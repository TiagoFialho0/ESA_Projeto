@model IEnumerable<CSSC.Models.Services>

@{
    ViewData["Title"] = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<style>
    body {
        background-color: #EAEAEA; /* Define a cor de fundo da página */
    }

    /* CSS para círculo laranja */
    .circle.colored {
        background-color: #E36D3F; /* Cor laranja */
        border-color: dimgrey;
    }

    .form-group {
        position: relative;
    }

    th, td {
        border-color: #808080; /* cor mais escura para os divisores da tabela */
    }
    
</style>


@if (User.IsInRole("Operador"))
{
    <div class="d-flex justify-content-end">
        <a asp-action="Create" class="btn btn-primary" style="background-color: #E36D3F; border: 1px solid white;">Criar Serviço</a>
    </div>

}

@if (TempData["Alerta"] != null)
{
    <script>
        alert('@TempData["Alerta"]');
        TempData["Alerta"] = null
    </script>
}

<table class="table">
    <thead>
        <tr >
            <th>
                @Html.DisplayNameFor(model => model.IdServico)
            </th>
            @if (User.IsInRole("Operador"))
            {
                <th>
                    @Html.DisplayNameFor(model => model.csscUser.Email)
                </th>
            }

            <th>
                @Html.DisplayNameFor(model => model.ServDataInicio)
            </th>
            <th></th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr class="expandable-row">
                <td>
                    @Html.DisplayFor(modelItem => item.IdServico)
                </td>
                @if (User.IsInRole("Operador"))
                {
                    <td>
                        @if (item.csscUser != null)
                        {
                            @Html.DisplayFor(modelItem => item.csscUser.Email)
                        }
                        else
                        {
                            <text>No User</text>
                        }
                    </td>
                }

                <td>
                    @Html.DisplayFor(modelItem => item.ServDataInicio)
                </td>
                @if (User.IsInRole("Operador"))
                {
                    <td style="display: flex; align-items: center;">
                        <form style="margin-right: 10px;">
                            <button type="submit" class="btn btn-secondary" asp-action="Edit" asp-route-id="@item.IdServico" style="background-color: #E36D3F; border: 1px solid white;">Editar</button>
                        </form>
                        <form style="margin-right: 10px;">
                            <button type="submit" class="btn btn-secondary" asp-action="Delete" asp-route-id="@item.IdServico" style="background-color: #B22222; border: 1px solid white;">Remover</button>
                        </form>
                        <button class="btn btn-secondary toggle-details-btn dropdown-toggle" data-target="#detailsContainer-@item.IdServico" style="background-color: white; color: black;"></button>
                    </td>
                }
                <td>
                    <form style="margin-right: 10px;">
                        <button type="submit" class="btn btn-secondary" asp-action="Details" asp-route-id="@item.IdServico" style="background-color: #E36D3F; border: 1px solid white;">Detalhes</button>
                    </form>
                </td>
            </tr>
            <tr class="hidden-row">
                <!--<td colspan="3">-->
                <td>
                    <div class="details-container" id="detailsContainer-@item.IdServico">
                        <p><strong>Serviço</strong></p>
                        <p><strong>Marca Veiculo:</strong> @item.ServMarcaVeiculo</p>
                        <p><strong>Modelo Veiculo:</strong> @item.ServModeloVeiculo</p>
                        <p><strong>Matricula Veiculo:</strong> @item.ServMatriculaVeiculo</p>
                        <p><strong>Data de Início:</strong> @item.ServDataInicio.ToString("dd/MM/yyyy")</p>

                        @{
                            string descricaoServico = item.DescricaoDoServico;
                            if (!string.IsNullOrEmpty(descricaoServico))
                            {
                                string[] palavras = descricaoServico.Split(' ');
                                string descricaoResumida = string.Join(" ", palavras.Take(8));
                                string descricaoCompleta = string.Join(" ", palavras.Skip(8));

                                if (palavras.Length > 8)
                                {
                                    <p><strong>Descrição do serviço:</strong> @descricaoResumida
                                        <span id="toggleDescription" style="cursor:pointer;color:#E36D3F;">[...]</span>
                                        <span id="descricaoCompleta" style="display:none;"> @descricaoCompleta</span><span id="toggleDescriptionCollapse" style="display:none; cursor:pointer;color:#E36D3F;">[recolher]</span>
                                    </p>
                                    <script>
                                        var toggleDescription = document.getElementById('toggleDescription');
                                        var descricaoCompletaElement = document.getElementById('descricaoCompleta');
                                        var toggleDescriptionCollapse = document.getElementById('toggleDescriptionCollapse');

                                        toggleDescription.addEventListener('click', function () {
                                            descricaoCompletaElement.style.display = 'inline';
                                            toggleDescription.style.display = 'none';
                                            toggleDescriptionCollapse.style.display = 'inline';
                                        });

                                        toggleDescriptionCollapse.addEventListener('click', function () {
                                            descricaoCompletaElement.style.display = 'none';
                                            toggleDescription.style.display = 'inline';
                                            toggleDescriptionCollapse.style.display = 'none';
                                        });
                                    </script>
                                }
                                else
                                {
                                    <p><strong>Descrição do serviço:</strong> @descricaoServico</p>
                                }
                            }
                            else
                            {
                                <p><strong>Descrição do serviço:</strong> (Sem descrição disponível)</p>
                            }
                        }



                    </div>
                </td>
                <td>
                    <div class="details-container" id="detailsContainer-@item.IdServico">
                        <p><strong>Cliente</strong></p>
                        <p><strong>Email do cliente: </strong>@Html.DisplayFor(modelItem => item.csscUser.Email)</p>
                        <p><strong>Morada:</strong> @Html.DisplayFor(modelItem => item.csscUser.UtMorada)</p>
                        <p><strong>Contacto:</strong> @Html.DisplayFor(modelItem => item.csscUser.PhoneNumber)</p>
                        <p><strong>NIF:</strong> @Html.DisplayFor(modelItem => item.csscUser.UtNIF)</p>
                        <p><strong>Data de Nascimento:</strong> @Html.DisplayFor(modelItem => item.csscUser.UtDataDeNascimento)</p>
                    </div>
                </td>
                <td>
                    <div class="details-container" id="detailsContainer-@item.IdServico">
                        <p><strong>Colaborador</strong></p>
                        <p><strong>Email do Colaborador: </strong>@Html.DisplayFor(modelItem => item.csscOperador.UserName)</p>
                    </div>
            </td>
                <td>
                    <div class="form-group">
                        <span class="info-icon" style="width: 20px; height: 20px; right: 55px;">
                            <img src="/info-button.png" style="width: 100%; height: 100%;">
                        </span>
                        <span class="info-text" style="position: absolute; right: -60px; top: -38px;">Selecione um estado para atualizar.</span>
                        <p><strong>Atualizar estado:</strong></p>
                        <form asp-action="AtualizarEstado" method="post" style="display: flex; align-items: center;">
                            <input type="hidden" name="id" value="@item.IdServico"/>
                            <select asp-items="ViewBag.Types" name="EstadoDoServico" class="form-select" style="margin-right: 10px;" onchange="enableButton(this)">
                                <option disabled selected value="@item.EstadoDoServico">@item.EstadoDoServico</option>
                            </select>
                            @if(item.EstadoDoServico != "Entregue" && item.EstadoDoServico != "Cancelado"){
                                <button type="submit" id="submitButton" class="btn btn-secondary ml-auto" style="background-color: #E36D3F; border: 1px solid white; text-shadow: 1px 1px 2px black;" disabled>Confirmar</button>
                            }
                        </form>
                    </div>
                    <div style="margin-top: 10px;">
                        <form asp-action="AgendarNotif" method="post">
                            <input type="hidden" name="id" value="@item.IdServico"/>
                            <button type="submit" class="btn btn-secondary" style="background-color: #E36D3F; border: 1px solid white;">Agendar notificação</button>
                        </form>
                    </div>
                </td>
            </tr>

        }
        
    </tbody>
</table>

@if (TempData["Success"] != null && (bool)TempData["Success"])
{
    <script>
        alert("Dados submetidos com sucesso!");
    </script>
}

<script>
    function enableButton(select) {
        var button = select.nextElementSibling; // Get the next sibling, which is the button
        button.disabled = select.value === '';
    }

    // Attach event listeners to all select elements with the specified class
    var selectElements = document.querySelectorAll('.form-select');
    selectElements.forEach(function (select) {
        select.addEventListener('change', function () {
            enableButton(this); // 'this' refers to the select element being changed
        });
    });

</script>